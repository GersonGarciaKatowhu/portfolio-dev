---
import GitHub from "./icons/GitHub.astro"
import NextJS from "./icons/NextJS.astro"
import Tailwind from "./icons/Tailwind.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"
import React from "./icons/React.astro"
import DB from "./icons/DB.astro"

const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  REACT: {
    name: "React",
    class: "bg-[#61DAFB] text-black",
    icon: React,
  },
  DATABASE: {
    name: "LocalStorage",
    class: "bg-[#003159] text-white",
    icon: DB,
  },
}
const PROJECTS = [
  {
    title: "Shopping Tech",
    description: "Desarrollé una aplicación en la que aprendí a filtrar datos y manejar estados interdependientes de manera eficiente. La aplicación incluye una tienda donde puedes seleccionar productos y agregarlos a una canasta. Para gestionar la complejidad de los estados, implementé useReducer, lo que me permitió aplicar y fortalecer mis habilidades en la gestión avanzada de estados en React.",
    link: "https://shoppingcartkatowhu.netlify.app/",
    image: "/projects/shoppingTech.jpg",
    tags: [TAGS.REACT],
    github: "https://github.com/GersonGarciaKatowhu/shopping-cart-products",
  },
  {
    title: "Daily Planner",
    description:
      "Una aplicación que permite gestionar tus tareas y utilizar un temporizador Pomodoro para organizar períodos de trabajo y descansos. Desarrollada con React, enfrenté desafíos al manejar múltiples estados, los cuales resolví eficazmente implementando React Context y custom hooks, lo que mejoró la escalabilidad y mantenibilidad del proyecto.",
    link: "https://dailykatowhu.netlify.app/",
    image: "/projects/daily.jpg",
    tags: [TAGS.REACT],
    github: "https://github.com/GersonGarciaKatowhu/daily",
  },
  {
    title: "Gatos Random",
    description: "Una aplicación que permite solicitar un dato aleatorio, el cual se presenta junto con una imagen relacionada. El principal desafío fue integrar dos APIs interdependientes para obtener la información, lo cual resolví utilizando React para manejar la lógica de dependencias y sincronización de datos.",
    link: "https://catsandfactskatowhu.netlify.app/",
    image: "/projects/gatoRandom.jpg",
    tags: [TAGS.REACT],
    github: "https://github.com/GersonGarciaKatowhu/gatosRandom",
  },
  {
    title: "Review Books",
    description: "Una aplicación personal desarrollada para almacenar y organizar información sobre libros, incluyendo detalles sobre dónde encontrarlos. Actualmente, estoy planeando añadir funcionalidades de autenticación y almacenamiento de datos utilizando Supabase para.",
    link: "https://reviewbooks.netlify.app/",
    image: "/projects/crudBooks.jpg",
    tags: [TAGS.REACT],
    github: "https://github.com/GersonGarciaKatowhu/crudBooks",
  },
  {
    title: "App Citas - Agenda de Citas",
    description:
      "Una aplicación de gestión de citas desarrollada desde cero con React. Durante el desarrollo, enfrenté desafíos en la gestión de estados y la implementación de localStorage, lo que me permitió profundizar en estos conceptos y mejorar mis habilidades en React.",
    link: "https://citasreactkatowhu.netlify.app/",
    image: "/projects/citasReact.jpg",
    tags: [TAGS.DATABASE, TAGS.REACT],
  },
]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img alt="Recién llegado vs 5 años en Nueva Zelanda" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Code
              
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link}>
              <Link class="size-4" />
              Preview
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>



